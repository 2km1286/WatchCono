<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- ① 기존 코드 -->
	<!-- ※ 어노테이션 을 활용하여 Controller 객체를 등록할 수 있도록 한다. -->
	<context:component-scan base-package="com.act.manager" />
	
	<!-- ③ mybatis 등록 과정에서 생겨나는 추가 코드 『2』 -->
	<!-- ※ mybatis 를 사용하기 위한 환경 설정을 추가하는 과정에서 -->
	<!--    필요한 dataSource 를 사용하기 위한 환경 설정 추가 -->
	<!--    → SimpleDriverDataSource -->
	<bean id="localDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@175.211.23.176:1521:xe"></property>
		<property name="username" value="scott"></property>
		<property name="password" value="tiger"></property>
	</bean>
	
	
	<!-- ② mybatis 등록 과정에서 생겨나는 추가 코드  『1』 -->
	<!-- ※ mybatis 를 사용하기 위한 환경 설정 추가-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	
		<!-- ④ dataSource 를 등록하고 와서 다시 추가 -->
		<property name="dataSource" ref="localDataSource"></property>
		
		<!-- ⑤ 매퍼 파일을 작성하고 와서 다시 추가 --><!-- 매퍼파일의 위치를 sqlsessionfactory에게 알려줄것 -->
		<property name="mapperLocations" value="classpath:com/act/mapper/*.xml"></property>
	
	</bean>
	
	<!-- ⑥ mybatis 등록 과정에서 생겨나는 추가 코드 『3』 -->
	<!-- ※ sqlSesion을 사용하기 위한 환경 설정 추가 -->
	<!--    → SqlSessionTemplate 등록 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>	<!-- 생성자의 아규먼트의 0번째 인덱스에 이 값을 주입-->
	</bean>
	
	
	<!-- @Transactional 어노테이션을 사용하기 위해 TransactionManager 설정 -->
	<bean id="transactionManager" class='org.springframework.jdbc.datasource.DataSourceTransactionManager'>
		<property name="dataSource" ref="localDataSource"></property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
</beans>








